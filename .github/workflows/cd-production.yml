name: Production Release to Docker Hub

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare version variables
        run: |
          echo "VERSION_SHORT=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_ENV

      - name: Build and Push Docker Images
        run: |
          # Discovery Server
          docker build -t ${{ secrets.DOCKER_USERNAME }}/discovery-server:${{ env.VERSION_SHORT }} -t ${{ secrets.DOCKER_USERNAME }}/discovery-server:prod ./discovery-server
          docker push ${{ secrets.DOCKER_USERNAME }}/discovery-server:${{ env.VERSION_SHORT }}
          docker push ${{ secrets.DOCKER_USERNAME }}/discovery-server:prod

          # API Gateway
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.VERSION_SHORT }} -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:prod ./api-gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.VERSION_SHORT }}
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:prod

          # Auth Service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ env.VERSION_SHORT }} -t ${{ secrets.DOCKER_USERNAME }}/auth-service:prod ./auth-service
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ env.VERSION_SHORT }}
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:prod

          # Task Service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/task-service:${{ env.VERSION_SHORT }} -t ${{ secrets.DOCKER_USERNAME }}/task-service:prod ./task-service
          docker push ${{ secrets.DOCKER_USERNAME }}/task-service:${{ env.VERSION_SHORT }}
          docker push ${{ secrets.DOCKER_USERNAME }}/task-service:prod

          # Notification Service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.VERSION_SHORT }} -t ${{ secrets.DOCKER_USERNAME }}/notification-service:prod ./notification-service
          docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.VERSION_SHORT }}
          docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:prod

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Production Release ${{ env.VERSION_SHORT }}
          tag_name: v${{ env.VERSION_SHORT }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}