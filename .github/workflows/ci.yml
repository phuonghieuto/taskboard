name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B clean package -DskipTests
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract branch name
      shell: bash
      run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      
    - name: Set image tag
      run: |
        if [ "${{ env.BRANCH }}" = "main" ]; then
          echo "TAG=prod" >> $GITHUB_ENV
          echo "VERSION=${{ github.sha::8 }}" >> $GITHUB_ENV
        else
          echo "TAG=latest" >> $GITHUB_ENV
        fi
    
    - name: Build and push Docker images
      run: |
        # Discovery Server
        docker build -t ${{ secrets.DOCKER_USERNAME }}/discovery-server:${{ env.TAG }} ./discovery-server
        docker push ${{ secrets.DOCKER_USERNAME }}/discovery-server:${{ env.TAG }}
        
        # API Gateway
        docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.TAG }} ./api-gateway
        docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.TAG }}
        
        # Auth Service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ env.TAG }} ./auth-service
        docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ env.TAG }}
        
        # Task Service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/task-service:${{ env.TAG }} ./task-service
        docker push ${{ secrets.DOCKER_USERNAME }}/task-service:${{ env.TAG }}
        
        # Notification Service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.TAG }} ./notification-service
        docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.TAG }}
        
        # Add version tags for main branch
        if [ "${{ env.BRANCH }}" = "main" ]; then
          docker tag ${{ secrets.DOCKER_USERNAME }}/discovery-server:${{ env.TAG }} ${{ secrets.DOCKER_USERNAME }}/discovery-server:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/discovery-server:${{ env.VERSION }}
          
          docker tag ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.TAG }} ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{ env.VERSION }}
          
          docker tag ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ env.TAG }} ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ env.VERSION }}
          
          docker tag ${{ secrets.DOCKER_USERNAME }}/task-service:${{ env.TAG }} ${{ secrets.DOCKER_USERNAME }}/task-service:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/task-service:${{ env.VERSION }}
          
          docker tag ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.TAG }} ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ env.VERSION }}
        fi