name: Staging Release to Docker Hub

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B clean package -DskipTests
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker Images
      run: |
        # Build and push discovery-server
        docker build -t ${{ secrets.DOCKER_USERNAME }}/discovery-server:latest -t ${{ secrets.DOCKER_USERNAME }}/discovery-server:dev ./discovery-server
        docker push ${{ secrets.DOCKER_USERNAME }}/discovery-server:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/discovery-server:dev
        
        # Build and push api-gateway
        docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:dev ./api-gateway
        docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:dev
        
        # Build and push auth-service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest -t ${{ secrets.DOCKER_USERNAME }}/auth-service:dev ./auth-service
        docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:dev
        
        # Build and push task-service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/task-service:latest -t ${{ secrets.DOCKER_USERNAME }}/task-service:dev ./task-service
        docker push ${{ secrets.DOCKER_USERNAME }}/task-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/task-service:dev
        
        # Build and push notification-service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/notification-service:latest -t ${{ secrets.DOCKER_USERNAME }}/notification-service:dev ./notification-service
        docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:dev
    
    - name: Create Development Deployment Tag
      uses: actions/github-script@v7
      with:
        script: |
          const { repo, owner } = context.repo;
          const sha = context.sha;
          const shortSha = sha.substring(0, 8);
          const tagName = `dev-${shortSha}`;
          
          github.rest.git.createRef({
            owner,
            repo,
            ref: `refs/tags/${tagName}`,
            sha
          }).catch(e => {
            console.log(`Tag ${tagName} already exists or other error: ${e}`);
          });
          
          console.log(`Created tag: ${tagName}`);