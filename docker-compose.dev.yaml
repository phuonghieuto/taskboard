version: '3.8'

services:
  db:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_MULTIPLE_DATABASES}
    volumes:
      - ./database/init-multi-postgres-databases.sh:/docker-entrypoint-initdb.d/init-multi-postgres-databases.sh
      - ./database/sql:/docker-entrypoint-initdb.d/sql
    networks:
      - microservices-network

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - microservices-network

  discovery:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile.dev
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    env_file:
      - .env
    container_name: discovery-server

  gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    depends_on:
      - discovery
      # - redis
    networks:
      - microservices-network
    env_file:
      - .env
    container_name: api-gateway

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8081"
    depends_on:
      - discovery
      # - redis
    networks:
      - microservices-network
    env_file:
      - .env
    container_name: auth-service

  # task-service:
  #   build:
  #     context: ./task-service
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "8082:8082"
  #   depends_on:
  #     - discovery
  #     - redis
  #   networks:
  #     - microservices-network
  #   env_file:
  #     - .env
  #   container_name: task-service

  # notification-service:
  #   build:
  #     context: ./notification-service
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "8083:8083"
  #   depends_on:
  #     - discovery
  #     - redis
  #   networks:
  #     - microservices-network
  #   env_file:
  #     - .env
  #   container_name: notification-service

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   networks:
  #     - microservices-network
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=user
  #     - RABBITMQ_DEFAULT_PASS=password

networks:
  microservices-network:
    driver: bridge