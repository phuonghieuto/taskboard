spring:
  application:
    name: notification-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_URL}:5432/${NOTIFICATION_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 5000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: ${MAIL_PROPERTIES_MAIL_SMTP_AUTH}
      mail.smtp.starttls.enable: ${MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}
  zipkin:
    baseUrl: http://zipkin:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1.0
    integration:
      enabled: true
    scheduled:
      enabled: true
  redis:
    host: redis
    port: 6379
    timeout: 300000
  cache:
    type: redis

# RabbitMQ queue and exchange names
rabbitmq:
  queue:
    notification: notification.queue
  exchange: notification.exchange
  task-exchange: task.events.exchange
  routing-key:
    notification: notification.routing.key
    task-due-soon: task.due.soon
    
    
logging:
  file:
    name: src/main/resources/script/stage_log.log
  level:
    org:
      hibernate:
        SQL: DEBUG
      springframework:
        web: DEBUG
        data: DEBUG
        boot:
          autoconfigure:
            data:
              rest: DEBUG
            orm: DEBUG
server:
  port: 8083
  servlet:
    context-path: /api/v1

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
  instance:
    hostname: ${SERVICE_HOST:localhost}
    non-secure-port: ${SERVICE_PORT:8083}
    prefer-ip-address: true


springdoc:
  api-docs:
    path: /notifications/api-docs
  swagger-ui:
    path: /swagger-ui.html

openapi:
  service:
    title: Notification Service API Documentation
    version: 1.0.0
    url: http://localhost:8080 # API Gateway URL

app:
  frontend-url: ${APP_FRONTEND_URL}

auth:
  keys:
    public-key-path: ${AUTH_PUBLIC_KEY_PATH}
    private-key-path: ${AUTH_PRIVATE_KEY_PATH}

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,env,mappings
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
  tracing:
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        enabled: true