spring:
  application:
    name: notification-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_URL}:5432/${NOTIFICATION_DB}
    username: ${NOTIFICATION_DB}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 5000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2

# RabbitMQ queue and exchange names
rabbitmq:
  queue:
    notification: notification.queue
  exchange: notification.exchange
  task-exchange: task.events.exchange
  routing-key:
    notification: notification.routing.key
    task-due-soon: task.due.soon
    
# Task reminder schedule configuration
task:
  reminder:
    schedule: "0 0 */1 * * *"  # Run every hour
    due-soon-threshold-hours: 24  # Tasks due within 24 hours
    
logging:
  file:
    name: src/main/resources/script/stage_log.log
  level:
    org:
      hibernate:
        SQL: DEBUG
      springframework:
        web: DEBUG
        data: DEBUG
        boot:
          autoconfigure:
            data:
              rest: DEBUG
            orm: DEBUG
server:
  port: 8083
  servlet:
    context-path: /api

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
  instance:
    hostname: ${SERVICE_HOST:localhost}
    non-secure-port: ${SERVICE_PORT:8083}
    prefer-ip-address: true

openapi:
  service:
    title: Notification Service API Documentation
    version: 1.0.0
    url: http://localhost:8080 # API Gateway URL
springdoc:
  api-docs:
    path: /notifications/v3/api-docs
  swagger-ui:
    path: /notifications/swagger-ui.html