spring:
  application:
    name: task-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_URL}:5432/${TASK_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate.format_sql: true
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
  zipkin:
    baseUrl: http://zipkin:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1.0
    integration:
      enabled: true
    scheduled:
      enabled: true

# Task reminder schedule configuration
task:
  reminder:
    schedule: "0 0 * * * *"  # Run every hour
  overdue:
    schedule: "0 0 * * * *" # Run every hour

logging:
  file:
    name: src/main/resources/script/stage_log.log
  level:
    org:
      hibernate:
        SQL: OFF
        type: OFF
      springframework:
        web: DEBUG
        data: DEBUG
        boot:
          autoconfigure:
            data:
              rest: DEBUG
            orm: DEBUG
        security: DEBUG
    root: INFO
  # Modify pattern to exclude stack traces
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  # Add exception conversion word to omit stack traces
  exception-conversion-word: "%wEx{short}"
  logback:
    rollingpolicy:
      max-history: 7
      max-file-size: 10MB

# Configure exception handling to not include stack traces
server:
  port: 8082
  servlet:
    context-path: /api/v1
  error:
    include-stacktrace: never
    include-message: always
    include-binding-errors: never
    whitelabel:
      enabled: false

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
  instance:
    hostname: ${SERVICE_HOST:localhost}
    non-secure-port: ${SERVICE_PORT:8082}
    prefer-ip-address: true

springdoc:
  api-docs:
    path: /tasks/api-docs
  swagger-ui:
    path: /swagger-ui.html
openapi:
  service:
    title: Task Service API Documentation
    version: 1.0.0
    url: http://localhost:8080 # API Gateway URL

auth:
  keys:
    public-key-path: ${AUTH_PUBLIC_KEY_PATH}
    private-key-path: ${AUTH_PRIVATE_KEY_PATH}


# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,env,mappings
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
  tracing:
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        enabled: true